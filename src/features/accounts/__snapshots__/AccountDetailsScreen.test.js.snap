// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AccountDetailsScreen should render correctly 1`] = `
<RNCSafeAreaView
  style={
    Object {
      "backgroundColor": "#18181B",
      "flex": 1,
    }
  }
  testID="AccountDetailsScreen"
>
  <AppGlobalHeader />
  <Styled(View)>
    <Box
      alignItems="center"
      flexDirection="row"
      marginLeft={1}
      marginRight={22}
    >
      <Memo(ForwardRef(Box))
        width="80px"
      >
        <BackButton
          onPress={[Function]}
        />
      </Memo(ForwardRef(Box))>
      <Memo(ForwardRef(Box))
        alignContent="center"
        alignItems="center"
        flex={1}
        pl={15}
        width="100%"
      >
        <Styled(Component)
          variant="h3"
        />
      </Memo(ForwardRef(Box))>
      <Memo(ForwardRef(Box))
        alignItems="flex-end"
        width="80px"
      >
        <Memo(ForwardRef(Pressable))
          _pressed={
            Object {
              "opacity": 0.2,
            }
          }
          onPress={[Function]}
        >
          <SvgDotsVertical
            height="22px"
            width="22px"
          />
        </Memo(ForwardRef(Pressable))>
      </Memo(ForwardRef(Box))>
    </Box>
  </Styled(View)>
  <ForwardRef
    refreshControl={<RefreshControlMock />}
  >
    <Memo(ForwardRef(Stack))
      flex={1}
      mx={26}
    >
      <Memo(ForwardRef(Stack))
        alignItems="center"
        backgroundColor="#27272A"
        borderRadius={8}
        direction="column"
        p="32px"
      >
        <Memo()
          size={48}
        />
        <Component>
          <Component />
        </Component>
        <Memo(ForwardRef(Stack))
          direction="row"
          mt={5}
          width="100%"
        >
          <Memo(ForwardRef(Button))
            flex={1}
            onPress={[Function]}
            size="sm"
          >
            Send
          </Memo(ForwardRef(Button))>
          <Memo(ForwardRef(Button))
            flex={1}
            ml={2}
            onPress={[Function]}
            size="sm"
          >
            Receive
          </Memo(ForwardRef(Button))>
        </Memo(ForwardRef(Stack))>
      </Memo(ForwardRef(Stack))>
      <Memo(ForwardRef(Stack))
        mt={8}
      >
        <Memo(ForwardRef(Box))
          borderBottomColor="#3F3F46"
          borderBottomWidth={0.5}
          pb={4}
        >
          <Styled(Component)
            variant="h2"
          >
            Transactions
          </Styled(Component)>
        </Memo(ForwardRef(Box))>
        <Memo(ForwardRef(Box))
          mt={3}
        >
          <TransactionHistory />
        </Memo(ForwardRef(Box))>
      </Memo(ForwardRef(Stack))>
      <Memo(ForwardRef(Stack))
        backgroundColor="rgba(120, 53, 15, 0.3)"
        mt={20}
        p="16px"
      >
        <Memo(ForwardRef(Stack))
          direction="row"
        >
          <Memo(ForwardRef(Box))
            mr={3}
            mt="3px"
          >
            <SvgAlert />
          </Memo(ForwardRef(Box))>
          <Styled(Component)
            fontSize={17}
            ml={2}
            variant="h3"
          >
            Account not backed up
          </Styled(Component)>
        </Memo(ForwardRef(Stack))>
        <Memo(ForwardRef(Box))
          mt={2}
        >
          <Styled(Component)
            color="rgba(254, 243, 199, 1)"
          >
            This phrase allows you to recover your account if your phone is lost or you change your device.
          </Styled(Component)>
        </Memo(ForwardRef(Box))>
        <Memo(ForwardRef(Button))
          alignSelf="flex-start"
          backgroundColor="rgba(120, 53, 15, 1)"
          mt={4}
          size="sm"
        >
          Back up now
        </Memo(ForwardRef(Button))>
      </Memo(ForwardRef(Stack))>
    </Memo(ForwardRef(Stack))>
  </ForwardRef>
  <AccountSettingsModal
    onClose={[Function]}
  />
  <QRCodeModal
    description="Scan this QR code in your new device"
    onClose={[Function]}
    title="Export account"
  />
</RNCSafeAreaView>
`;

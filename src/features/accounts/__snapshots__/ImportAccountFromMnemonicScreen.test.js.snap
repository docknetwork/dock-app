// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ImportAccountFromMnemonicScreen should render correctly 1`] = `
<StyledNativeComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "inlineStyle": InlineStyle {
        "rules": Array [
          "
  background-color: ",
          "#18181B",
          ";
  flex: 1;
",
        ],
      },
      "render": [Function],
      "shouldForwardProp": undefined,
      "styledComponentId": "StyledNativeComponent",
      "target": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  testID="create-wallet-screen"
>
  <Styled(View)>
    <BackButton />
  </Styled(View)>
  <Styled(ScrollView)
    marginLeft={26}
    marginRight={26}
  >
    <Styled(Component)
      marginTop={52}
      variant="h1"
    >
      Account recovery phrase
    </Styled(Component)>
    <Styled(Component)
      marginTop={12}
    >
      This is the 12 word phrase you were given when you created your account.
    </Styled(Component)>
    <Memo(ForwardRef(Box))>
      <Memo(ForwardRef(FormControl))>
        <Memo(ForwardRef(Stack))
          mt={7}
        >
          <Memo(ForwardRef(FormControlLabel))>
            Enter account recovery phrase
          </Memo(ForwardRef(FormControlLabel))>
          <Memo(ForwardRef(TextArea))
            autoCapitalize="none"
            placeholder=""
            value="test"
          />
          <Memo(ForwardRef(FormControlErrorMessage))>
            Invalid recovery phrase
          </Memo(ForwardRef(FormControlErrorMessage))>
        </Memo(ForwardRef(Stack))>
      </Memo(ForwardRef(FormControl))>
    </Memo(ForwardRef(Box))>
    <AccountAdvancedOptions
      form={
        Object {
          "_errors": Object {},
          "phrase": "test",
        }
      }
      onChange={
        [MockFunction] {
          "calls": Array [
            Array [
              "phrase",
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
    />
  </Styled(ScrollView)>
  <Styled(Box)
    marginBottom={10}
    marginLeft={26}
    marginRight={26}
  >
    <LoadingButton
      full={true}
      testID="next-btn"
    >
      Next
    </LoadingButton>
  </Styled(Box)>
</StyledNativeComponent>
`;
